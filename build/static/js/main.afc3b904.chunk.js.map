{"version":3,"sources":["services/persons.js","components/displayNames.js","components/filter.js","components/personForm.js","app.js","index.js"],"names":["services_persons","axios","get","then","response","data","newPerson","post","IDtoDelete","name","updatePersonsFromDb","window","confirm","concat","delete","DisplayNames","_ref","persons","newFilterString","map","entry","i","toLowerCase","includes","react_default","a","createElement","key","number","onClick","personsService","id","Filter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilterString","_useState9","_useState10","errorMessage","setErrorMessage","useEffect","message","className","filter","event","target","personForm","preventDefault","find","x","alert","toConsumableArray","setTimeout","displayNames","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.afc3b904.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = ' /api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst updatePersons = newPerson => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = ( IDtoDelete , name, updatePersonsFromDb) => {\n  if (window.confirm(`Delete ${name}?`)) {\n  const request = axios.delete(`${baseUrl}/${IDtoDelete}`)\n  return request.then(response => response.data).then(updatePersonsFromDb)\n}}\n\nexport default { getAll , updatePersons , deletePerson }","import React from 'react'\nimport personsService from '../services/persons'\n\n  const DisplayNames = ({ persons, updatePersonsFromDb, newFilterString }) => persons.map((entry, i) => {\n      if (entry.name.toLowerCase().includes(newFilterString.toLowerCase())) {\n          return (\n          <p key={i}>{entry.name} {entry.number} <button onClick={() => personsService.deletePerson(entry.id, entry.name, updatePersonsFromDb)}>Delete</button></p>\n      )} else {\n          return (\"\")\n          }\n        }\n   )\n\nexport default DisplayNames","import React from 'react'\n\n const Filter = ({ newFilterString , handleFilterChange }) => (\n       <div>\n          filter shown with:  <input\n          value={newFilterString}\n          onChange={handleFilterChange}\n          />\n       </div>\n  )\n\n  export default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson , newName , handleNameChange , newNumber , handleNumberChange }) => (\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input\n          value={newName}\n          onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n)\nexport default PersonForm","import React, { useState, useEffect } from 'react'\nimport DisplayNames from './components/displayNames'\nimport Filter from './components/filter'\nimport PersonForm from './components/personForm'\nimport personsService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilterString, setNewFilterString ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      if (typeof (persons.find(x => x.name === newName)) != \"undefined\") {\n          window.alert(`${newName} already exists in the phonebook`)\n      } else {\n          setPersons([...persons, { name: newName, number: newNumber }])\n          personsService\n          .updatePersons({ name: newName, number: newNumber })\n          .then(updatePersonsFromDb)\n          setErrorMessage(\n          `${newName} was added to the phonebook`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      }\n  }\n\n  const handleFilterChange = (event) => {\n      setNewFilterString(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  const updatePersonsFromDb = () => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })}\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\n  return (\n    <div>\n      <h2>Phonebook ! ! ! !</h2>\n\n      <Notification message={errorMessage} />\n\n      <Filter newFilterString={newFilterString}  handleFilterChange={handleFilterChange} />\n\n      <h3>Add a new...</h3>\n\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber}\n      handleNumberChange={handleNumberChange} />\n\n      <h2>Numbers</h2>\n\n      <DisplayNames persons={persons} updatePersonsFromDb={updatePersonsFromDb} newFilterString={newFilterString}/>\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}